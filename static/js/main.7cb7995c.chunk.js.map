{"version":3,"sources":["components/Button/Button.tsx","App.tsx","index.tsx"],"names":["Button","children","styleClass","onClick","isLightCondition","type","className","classNames","defaultProps","SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","getReorderedGoods","map","good","indexOf","ReactDOM","render","document","getElementById"],"mappings":"uPAUaA,EAA0B,SAAC,GAKjC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,QACAC,EACI,EADJA,iBAEA,OACE,wBACEC,KAAK,SACLC,UAAWC,IACT,SACAL,EACA,CAAE,WAAYE,IAEhBD,QAASA,EAPX,SASGF,KAKPD,EAAOQ,aAAe,CACpBJ,kBAAkB,GC3Bb,IAaFK,EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA5BD,SACLA,EACAJ,EACAE,GAEA,IAAMG,EAAY,YAAOD,GAgBzB,OAdIJ,IAAaL,EAASW,SACxBD,EAAaE,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAEjBT,IAAaL,EAASgB,QAC/BN,EAAaE,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUI,OAASH,EAAWG,WAIf,IAAfV,GACFG,EAAaQ,UAGRR,EAOOS,CAAkBlB,EAAiBI,EAAUE,GAE3D,OACE,sBAAKV,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEJ,WAAW,UACXC,QAAS,kBAAMY,EAAYN,EAASW,WACpChB,iBAAkBU,IAAaL,EAASW,SAH1C,iCAQA,cAAC,EAAD,CACElB,WAAW,aACXC,QAAS,kBAAMY,EAAYN,EAASgB,SACpCrB,iBAAkBU,IAAaL,EAASgB,OAH1C,4BAQA,cAAC,EAAD,CACEvB,WAAW,aACXC,QAAS,kBAAMc,GAAeD,IAC9BZ,kBAAmBY,EAHrB,sBAQEF,IAAaL,EAASI,MAAQG,IAC9B,cAAC,EAAD,CACEd,WAAW,YACXC,QAAS,WACPY,EAAYN,EAASI,MACrBI,GAAc,IAJlB,sBAYJ,6BACGC,EAAMW,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAAqEA,GAArE,UAA2BA,EAA3B,YAAmCpB,EAAgBqB,QAAQD,cC7FrEE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7cb7995c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  children: string;\n  styleClass: string;\n  onClick: React.MouseEventHandler;\n  isLightCondition?: boolean;\n}\n\nexport const Button: React.FC<Props> = ({\n  children,\n  styleClass,\n  onClick,\n  isLightCondition,\n}) => {\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        'button',\n        styleClass,\n        { 'is-light': isLightCondition },\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  isLightCondition: true,\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Button } from './components/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((firstGood, secondGood) => (\n      firstGood.localeCompare(secondGood)\n    ));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((firstGood, secondGood) => (\n      firstGood.length - secondGood.length\n    ));\n  }\n\n  if (isReversed === true) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <Button\n          styleClass=\"is-info\"\n          onClick={() => setSortType(SortType.ALPHABET)}\n          isLightCondition={sortType !== SortType.ALPHABET}\n        >\n          Sort alphabetically\n        </Button>\n\n        <Button\n          styleClass=\"is-success\"\n          onClick={() => setSortType(SortType.LENGTH)}\n          isLightCondition={sortType !== SortType.LENGTH}\n        >\n          Sort by length\n        </Button>\n\n        <Button\n          styleClass=\"is-warning\"\n          onClick={() => setIsReversed(!isReversed)}\n          isLightCondition={!isReversed}\n        >\n          Reverse\n        </Button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <Button\n            styleClass=\"is-danger\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </Button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={`${good}-${goodsFromServer.indexOf(good)}`}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}